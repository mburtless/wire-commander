paths:
  '/peers/{PeerName}':
    get:
      operationId: GetPeer
      summary: 'Get details of a peer'
      responses:
        '200':
          $ref: '#/responses/PeerResponse'
    put:
      operationId: UpdatePeer
      summary: 'Updates a peer'
      responses:
        '200':
          description: 'The peer'
          schema:
            $ref: '#/definitions/Peer'
      parameters:
        -
          name: PublicKey
          in: body
          description: 'Public key of peer'
          required: true
          schema:
            type: string
    post:
      operationId: CreatePeer
      summary: 'Creates a new peer'
      responses:
        '200':
          description: 'The peer'
      parameters:
        -
          name: PublicKey
          in: body
          description: 'Public key of peer to add'
          required: true
          schema:
            type: string
    delete:
      operationId: DeletePeer
      summary: 'Deletes a peer'
      responses:
        '200':
          description: 'Returns empty object'
          schema:
            type: object
            title: 'Empty Object'
    parameters:
      -
        name: PeerName
        in: path
        description: 'Name of peer'
        required: true
        type: string
  /peers:
    get:
      operationId: GetPeers
      summary: 'Get list of active peers'
      responses:
        '200':
          description: 'Active peers'
          schema:
            type: array
            title: Peers
            description: 'Active peers'
            items:
              $ref: '#/definitions/Peer'
  '/peers/{PeerName}/config':
    get:
      operationId: GetConfig
      summary: 'Returns the client tunnel config of the peer'
      responses:
        '200':
          description: 'The client tunnel config'
          schema:
            type: string
    parameters:
      -
        name: PeerName
        in: path
        description: 'Name of peer'
        required: true
        type: string
responses:
  PeerResponse:
    description: 'The details of the peer'
    schema:
      $ref: '#/definitions/Peer'
definitions:
  Peer:
    type: object
    title: Peer
    properties:
      PeerName:
        type: string
        title: 'Peer Name'
        description: 'Name of peer'
      PublicKey:
        type: string
        title: 'Public Key'
        description: 'Public key of peer'
info:
  title: 'Wire Commander'
  version: 0.0.1
  description: 'Wire Commander provides an API based management layer for WireGuard'
  contact:
    name: 'Matthew Burtless'
    email: mburtless@threepnet.com
host: wirecomdr.com
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
swagger: '2.0'
